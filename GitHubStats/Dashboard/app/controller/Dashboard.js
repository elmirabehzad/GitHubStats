/*
 * File: app/controller/Dashboard.js
 *
 * This file was generated by Sencha Architect version 3.1.0.
 * http://www.sencha.com/products/architect/
 *
 * This file requires use of the Ext JS 4.2.x library, under independent license.
 * License of Sencha Architect does not include license for Ext JS 4.2.x. For more
 * details see http://www.sencha.com/license or contact license@sencha.com.
 *
 * This file will be auto-generated each and everytime you save your project.
 *
 * Do NOT hand edit this file.
 */

Ext.define('Dashboard.controller.Dashboard', {
    extend: 'Ext.app.Controller',

    models: [
        'Language',
        'ContributorComit',
        'Branch',
        'info'
    ],
    stores: [
        'Language',
        'Branch',
        'ContributorComit',
        'Info'
    ],
    views: [
        'DashboardViewPort'
    ],

    refs: [
        {
            ref: 'dashboardViewPort',
            selector: 'dashboardviewport'
        }
    ],

    init: function(application) {
        var me = this;
        me.apiUrl = "../Api/values/"; //"http://localhost:11277/Api/values/";
        me.control({
            "dashboardviewport button[text=GO]":{
                click:me.onGoclick
            },
            "dashboardviewport button[text=DisplayChart]":{
                click:me.onDisplayChartclick
            },
            "dashboardviewport combobox[itemId=cmbBranch]":{
                change:function(field, newValue, oldValue, eOpts){
                    console.log(field.getValue());
                   field.setValue(field.getValue(),true);
                }
            }

        });
    },

    onGoclick: function() {
        console.log('gooooooo');
        var me = this;
        var viewport = me.getDashboardViewPort();
        var repname = viewport.down('#txtRepName').getValue();
        me.onInfoGet(repname);

        // me.onComitsGet(repname);
        // me.onBranchesGet(repname);
    },

    onInfoGet: function(repname) {
        var me = this;
        var viewport = me.getDashboardViewPort();

        Ext.Ajax.request({
            url: me.apiUrl + 'Stats',
            method: "GET",
            params:{
                repoName:repname
            },
            success:function(response){
                var data =Ext.decode(response.responseText);
                viewport.down('#txthomepage').setValue(data.Homepage);
                viewport.down('#txtbranch').setValue(data.Branchcount);
                viewport.down('#txtcontributor').setValue(data.Contributorcount);

                me.onLanguageGet(repname);
                me.onComitsGet(repname);
                me.onBranchesGet(repname);

            },
            failure:function(response){
                console.log('failure');
            }
        });


    },

    onLanguageGet: function(repname) {
        var me = this;
        var viewport = me.getDashboardViewPort();
        var languageChart = viewport.down('#languagechart');
        Ext.Ajax.request({
            url: me.apiUrl + 'Languages',
            method: "GET",
            params:{
                repoName:repname
            },
            success:function(response){
                var data =Ext.decode(response.responseText);
                //languageChart.bindStore(data);
                var chartStore = languageChart.store;
                chartStore.loadData(data);
                languageChart.redraw();
            },
            failure:function(response){
                console.log('failure');
            }

        });

    },

    onComitsGet: function(repname) {
        console.log('im in commits');
        var me = this;
        var viewport = me.getDashboardViewPort();
        var commitChart = viewport.down('#comitchart');
                Ext.Ajax.request({
                    url:me.apiUrl + 'Contributors',
                    method:"GET",
                    params:{
                        repoName:repname
                    },
                    success:function(response){
                        var data =Ext.decode(response.responseText);
                        var chartStore = commitChart.store;
                        chartStore.loadData(data);
                        commitChart.redraw();

                    },
                    failure:function(response){
                       console.log('failure');
                    }

                });
        // var data=[{"Name":"triolenzunge","CommitCount":1},{"Name":"seanyeh","CommitCount":1},{"Name":"folbo","CommitCount":1},{"Name":"vanferry","CommitCount":1},{"Name":"evinism","CommitCount":1},{"Name":"shoogle","CommitCount":1},{"Name":"elerouxx","CommitCount":1},{"Name":"watery","CommitCount":1},{"Name":"mbrouard","CommitCount":1},{"Name":"johnsonge","CommitCount":1},{"Name":"algadoreo","CommitCount":1},{"Name":"LucaRood","CommitCount":1},{"Name":"uwei","CommitCount":1},{"Name":"danielgarthur","CommitCount":2},{"Name":"jasonbcox","CommitCount":2},{"Name":"briff","CommitCount":2},{"Name":"gomesrod","CommitCount":2},{"Name":"chenlung","CommitCount":2},{"Name":"zazula","CommitCount":2},{"Name":"mokaspar","CommitCount":2},{"Name":"krlmlr","CommitCount":3},{"Name":"guifre2","CommitCount":3},{"Name":"thSoft","CommitCount":3},{"Name":"yufanyufan","CommitCount":4},{"Name":"fyzix","CommitCount":4},{"Name":"jpfleury","CommitCount":4},{"Name":"CombatCube","CommitCount":5},{"Name":"rtega","CommitCount":5},{"Name":"alcinos","CommitCount":7},{"Name":"Gootector","CommitCount":8},{"Name":"Isensee","CommitCount":9},{"Name":"Gai-Luron","CommitCount":11},{"Name":"akdor1154","CommitCount":11},{"Name":"shredpub","CommitCount":12},{"Name":"thomasbonte","CommitCount":12},{"Name":"Soerboe","CommitCount":20},{"Name":"MarkRS-UK","CommitCount":22},{"Name":"ChurchOrganist","CommitCount":23},{"Name":"heuchi","CommitCount":28},{"Name":"vgstef","CommitCount":34},{"Name":"Igevorse","CommitCount":50},{"Name":"softins","CommitCount":56},{"Name":"AntonioBL","CommitCount":66},{"Name":"andreituicu","CommitCount":76},{"Name":"jpirie","CommitCount":84},{"Name":"BartlomiejLewandowski","CommitCount":122},{"Name":"lvinken","CommitCount":216},{"Name":"mgavioli","CommitCount":382},{"Name":"MarcSabatella","CommitCount":554},{"Name":"Jojo-Schmitz","CommitCount":617},{"Name":"trig-ger","CommitCount":827},{"Name":"lasconic","CommitCount":1656},{"Name":"wschweer","CommitCount":1779}];
        // var chartStore = commitChart.store;
        // chartStore.loadData(data);
        // commitChart.redraw();
    },

    onBranchesGet: function(repname) {
                        var me = this;
                        var viewport = me.getDashboardViewPort();
                        var cmbBranch = viewport.down('#cmbBranch');
                        Ext.Ajax.request({
                            url:me.apiUrl + 'BranchList',
                            method: "GET",
                            params:{
                               repoName:repname
                            },
                            success:function(response){
                                var data =Ext.decode(response.responseText);
                                for ( var i = 0, c = data.length; i < c; i++ ) {
                               data[i] = [data[i]];
                            }
                            var Tesstore = new Ext.data.ArrayStore({
                            fields: ['Name'],
                            data : data
                            });
                            cmbBranch.store = Tesstore;
                            cmbBranch.displayField = 'Name';
                            cmbBranch.valueField = 'Name';


                            },
                            failure:function(response){
                               console.log('failure');
                            }

                        });
        //                var data=["al","iman"];
        //                 for ( var i = 0, c = data.length; i < c; i++ ) {
        //                        data[i] = [data[i]];
        //                     }
        //                     var Tesstore = new Ext.data.ArrayStore({
        //                     fields: ['Name'],
        //                     data : data
        //                     });
        //                     cmbBranch.store = Tesstore;
        //                     cmbBranch.autoSelect = true;
        //                     cmbBranch.displayField = 'Name';
        //                     cmbBranch.valueField = 'Name';




    },

    onDisplayChartclick: function() {
                console.log('displaychart');
                var me = this;
                var viewport = me.getDashboardViewPort();
                var branchChart = viewport.down('#branchChart');
                var repname = viewport.down('#txtRepName').getValue();
                var cmbBranch = viewport.down('#cmbBranch');
                var branchValue = cmbBranch.getValue();
                var dateValue = viewport.down('#dpbranch').getValue();
                 Ext.Ajax.request({
                            url:me.apiUrl + 'CommitsInBranch',
                            method: "GET",
                            params:{
                                repoName:repname,
                                branchName:branchValue,
                                topDate:dateValue

                            },
                            success:function(response){
                                var data =Ext.decode(response.responseText);
                                        var chartStore = branchChart.store;
                                        chartStore.loadData(data);
                                        branchChart.redraw();
                            },
                            failure:function(response){
                               console.log('failure');
                            }

                        });

    }

});
